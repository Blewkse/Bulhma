services:
  # -----------------------------------------------
  # ------------------ FRONTEND -------------------
  # -----------------------------------------------
  frontend:
    container_name: bulhma-frontend
    build:
      dockerfile: Dockerfile.dev
      context: ./frontend
    env_file:
      - ./env
    depends_on:
      - backend
    volumes:
      - ./frontend:/frontend
      # Don't include node_modules in volume.
      # When adding a dependency, the image has to be built again or we have to go into the container and install the dependency manually
      - /frontend/node_modules/
    networks:
      - frontnet
    ports:
      - 4000:4000
    restart: always

  # -----------------------------------------------
  # ------------------- BACKEND -------------------
  # -----------------------------------------------
  backend:
    container_name: bulhma-backend
    build:
      dockerfile: Dockerfile.dev
      context: ./backend
    env_file:
      - ./env
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/backend
      # Don't include node_modules in volume.
      # When adding a dependency, the image has to be built again or we have to go into the container and install the dependency manually
      - /backend/node_modules/
    networks:
      - backnet
      - frontnet
      - redisnet
    ports:
      - 3333:3333
    restart: always

  # -----------------------------------------------
  # --------------------- DB ----------------------
  # -----------------------------------------------
  db:
    container_name: bulhma-db
    image: postgres:15.3-alpine
    env_file:
      - ./env
    expose:
      - 5432
    volumes:
      - pg_data:/var/lib/postgresql/data/
      - pg_backups:/pg_backups
    networks:
      - backnet
    restart: always

  # -----------------------------------------------
  # ------------------- NGINX ---------------------
  # -----------------------------------------------
  nginx:
    container_name: bulhma-nginx
    image: nginx:1.25.1-alpine
    depends_on:
      - backend
      - frontend
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - frontnet
    restart: always

networks:
  backnet:
  redisnet:
  frontnet:

volumes:
  pg_data:
  pg_backups:
  redis_data:
